#include <algorithm>
#include <unordered_set>
#include <iostream>
#include <string>
#include <sstream>
#include <vector>
using namespace std;


string ToStr(int r, int c)
{
	stringstream os;
	os << r << "-" << c;
	return os.str();
}

vector<pair<int, int>> GetCandidates(const vector<vector<int>>& a, int r, int c, const unordered_set<string>& visited)
{
	vector<pair<int, int>> res;
	if (r - 1 >= 0 && a[r][c] < a[r - 1][c] && visited.find(ToStr(r - 1, c)) == visited.end())
		res.push_back(make_pair(r - 1, c));
	if (c + 1 < a[r].size() && a[r][c] < a[r][c + 1] && visited.find(ToStr(r, c + 1)) == visited.end())
		res.push_back(make_pair(r, c + 1));
	if (r + 1 < a.size() && a[r][c] < a[r + 1][c] && visited.find(ToStr(r + 1, c)) == visited.end())
		res.push_back(make_pair(r + 1, c));
	if (c - 1 >= 0 && a[r][c] < a[r][c - 1] && visited.find(ToStr(r, c - 1)) == visited.end())
		res.push_back(make_pair(r, c - 1));
	return res;
}

int LIP(const vector<vector<int>>& a, int r, int c, int maxHere, unordered_set<string>& visited)
{
	int mlen = maxHere;
	auto candidates = GetCandidates(a, r, c, visited);
	for (auto way : candidates)
	{
		string currentCell = ToStr(way.first, way.second);
		visited.insert(currentCell);
		mlen = max(mlen, LIP(a, way.first, way.second, maxHere + 1, visited));
		visited.erase(currentCell);
	}

	return mlen;
}

int LongestIncreasingPath(const vector<vector<int>>& matrix)
{
	int mlen = 1;
	for (int r = 0; r < matrix.size(); ++r)
	{
		for (int c = 0; c < matrix[r].size(); ++c)
		{
			unordered_set<string> visited;
			visited.insert(ToStr(r, c));
			mlen = max(mlen, LIP(matrix, r, c, 1, visited));
		}
	}

	return mlen;
}

int main()
{
	vector<vector<int>> matrix =
	{
	   {81,85,87,25,0,16,71,97,44,52,91,15,75,91,17,34,12,29,67,26,89,55,13,71,62,45,56,82,56,69,4,94},
	   {28,42,28,5,28,99,37,96,1,33,18,27,86,11,83,26,57,24,24,96,8,56,70,85,24,64,73,15,94,68,81,75},
	   {89,87,51,94,0,59,90,67,76,15,48,19,35,86,27,60,63,21,42,4,90,32,25,93,66,71,0,87,71,76,65,62},
	   {44,46,80,70,8,27,24,22,35,67,60,76,10,2,92,87,59,29,59,34,53,90,19,0,5,65,87,18,19,79,40,37},
	   {56,80,14,63,12,89,11,77,95,45,88,53,65,73,27,63,0,68,4,25,91,20,59,37,9,55,16,95,62,70,59,15},
	   {30,88,99,35,44,72,74,17,39,76,86,44,85,90,43,4,64,37,9,95,23,49,89,45,61,96,29,68,9,29,93,45},
	   {98,51,54,58,49,20,89,37,13,76,23,95,83,73,60,11,32,56,70,58,29,93,42,74,70,77,63,83,91,13,55,30},
	   {19,80,86,34,78,41,69,81,82,63,39,71,42,13,71,15,8,34,35,55,89,12,30,22,60,69,90,85,95,36,32,46},
	   {46,81,65,29,82,63,97,22,33,74,86,12,46,8,52,0,51,75,20,13,64,58,60,4,2,49,94,22,11,67,53,41},
	   {70,58,73,72,75,90,97,30,79,23,88,18,59,17,25,94,18,90,29,82,80,11,4,89,81,93,71,97,83,23,92,8},
	   {13,40,59,79,8,70,82,80,48,86,49,52,21,80,28,94,45,40,58,40,95,67,30,23,48,8,49,51,81,98,76,62},
	   {16,42,3,17,30,67,15,9,52,66,85,75,17,13,49,35,3,80,58,36,28,30,43,84,17,62,48,20,86,25,15,83},
	   {18,5,73,48,91,53,93,99,18,20,67,23,5,40,35,13,5,83,31,94,19,80,39,48,38,68,3,24,15,13,97,55},
	   {25,9,17,26,69,92,11,64,7,83,29,32,3,21,94,9,50,80,27,49,8,49,57,1,55,66,68,3,83,44,58,35},
	   {78,77,31,16,90,96,46,31,94,80,34,98,10,24,71,98,59,60,76,63,75,93,25,29,77,91,97,56,18,36,51,10},
	   {61,9,63,18,28,29,9,33,28,10,61,8,70,13,93,68,80,86,36,50,16,57,11,71,96,67,47,93,60,76,48,81},
	   {5,75,89,55,78,20,76,40,29,78,47,19,71,12,5,68,73,55,4,3,84,31,0,72,24,63,11,40,29,39,99,46},
	   {75,72,96,73,36,43,44,87,28,68,52,87,85,69,82,80,29,26,12,61,46,8,72,30,0,35,27,53,42,39,66,47},
	   {18,78,18,14,95,43,96,14,70,35,32,31,5,40,72,14,81,68,20,42,14,92,74,23,45,34,60,30,73,34,61,75},
	   {91,9,21,79,73,80,4,98,59,95,71,45,9,46,56,10,72,41,56,56,60,84,98,15,94,41,10,93,80,86,63,35},
	   {82,92,19,83,40,31,53,66,50,9,89,11,31,73,57,82,27,56,96,92,84,30,17,12,68,23,53,71,26,74,44,17},
	   {74,28,18,48,15,78,75,10,0,24,50,38,6,62,64,76,86,45,91,82,62,59,18,52,91,21,88,76,47,2,25,91},
	   {25,72,43,24,6,42,68,79,49,90,42,22,66,45,36,95,80,69,99,82,67,16,25,62,27,90,1,12,39,21,65,89},
	   {92,13,50,8,73,48,95,75,84,24,17,66,72,51,37,4,43,68,86,39,54,87,47,94,19,47,47,14,87,37,17,13},
	   {58,10,19,96,40,46,77,88,62,44,98,28,26,70,64,2,80,37,54,30,75,86,23,53,16,56,13,64,89,33,0,1},
	   {97,76,78,79,72,14,44,58,15,62,47,34,50,99,20,65,98,85,29,75,10,55,86,78,13,64,73,0,3,85,78,92},
	   {78,83,6,10,55,90,31,95,34,81,90,61,75,87,6,25,91,83,36,66,67,0,83,25,71,47,81,34,24,93,24,15},
	   {76,50,33,38,95,84,67,85,20,22,72,37,40,40,61,98,67,52,71,46,66,31,15,23,74,34,38,88,84,89,77,28},
	   {52,13,46,88,15,38,71,79,60,28,5,65,68,8,49,49,16,63,10,29,72,42,12,47,13,52,36,12,83,25,46,69},
	   {6,69,8,79,59,46,84,34,36,80,49,54,44,69,19,77,28,97,33,33,75,91,61,77,33,50,27,39,97,93,90,70},
	   {45,2,32,82,23,79,57,32,89,65,44,40,25,89,42,79,80,29,60,50,21,64,92,45,82,40,67,69,18,9,66,65},
	   {70,91,59,0,23,24,39,55,42,12,50,51,92,94,87,9,75,28,71,78,25,8,77,40,36,61,92,82,59,29,84,92},
	   {29,0,47,14,84,27,4,43,1,84,27,11,91,46,57,1,22,29,82,92,95,71,92,61,14,30,58,33,99,53,91,58},
	   {45,91,69,36,85,47,35,34,71,90,47,51,68,99,72,23,49,61,52,23,51,40,30,32,84,46,16,84,46,89,60,60},
	   {47,21,5,25,9,60,45,62,80,94,89,96,42,59,33,33,43,52,3,92,78,69,90,53,4,42,68,57,96,49,9,72},
	   {43,20,71,71,70,81,12,38,67,3,35,66,61,9,91,41,69,44,57,26,90,1,57,89,40,77,84,33,89,33,74,36},
	   {84,96,11,84,60,92,48,14,73,1,51,97,14,52,23,98,78,96,51,91,81,40,6,67,96,44,6,15,70,66,94,71},
	   {71,72,92,1,53,72,60,55,69,45,47,36,15,22,20,52,32,66,21,73,26,70,70,59,50,62,24,89,61,94,41,70},
	   {7,1,76,57,78,89,88,80,92,43,37,1,90,38,67,96,25,47,43,97,77,10,96,14,44,76,83,5,28,70,36,92},
	   {94,15,6,62,28,3,61,69,90,54,34,46,50,56,79,49,69,98,13,15,54,82,92,79,14,89,3,40,46,7,94,25},
	   {70,92,57,50,2,70,58,87,90,94,82,31,99,56,48,7,81,15,79,27,42,1,11,30,53,22,0,5,79,59,83,45},
	   {31,79,86,26,88,10,27,17,38,68,73,26,93,9,43,75,25,83,9,12,11,31,48,75,45,90,46,18,3,87,60,97},
	   {70,6,46,50,22,35,49,67,83,32,63,94,28,1,55,48,9,86,7,8,63,24,68,71,22,54,93,17,82,48,5,24},
	   {31,69,47,2,32,69,83,41,12,53,67,50,24,79,56,46,40,55,80,89,5,16,10,89,11,54,49,47,5,40,84,18},
	   {82,17,34,41,23,4,90,72,67,52,91,87,50,43,59,85,35,99,42,95,69,52,34,93,69,41,37,92,62,77,83,71},
	   {2,30,71,4,77,84,69,71,41,76,70,16,85,89,28,66,94,45,7,8,83,22,13,48,8,75,31,24,87,13,94,92},
	   {92,71,74,79,16,69,21,2,1,66,11,27,64,65,1,76,0,50,5,90,43,39,78,25,39,1,65,94,39,78,76,72},
	   {7,24,14,82,71,95,41,5,72,53,68,66,38,43,56,23,74,81,94,50,77,3,38,52,91,87,73,91,54,18,89,84},
	   {97,62,69,64,2,50,77,5,6,46,63,94,36,15,41,99,31,59,71,36,94,26,12,25,11,48,49,55,20,11,74,50},
	   {19,81,26,59,41,3,58,13,70,57,81,91,7,81,3,37,92,20,88,8,49,80,48,29,65,41,34,94,50,75,82,20},
	   {72,88,12,9,80,32,7,26,21,45,74,57,20,78,70,76,57,47,81,69,42,26,83,35,70,73,88,12,51,40,34,17},
	   {98,44,13,43,84,86,12,46,35,34,22,63,73,96,99,68,73,68,38,49,65,94,88,47,49,5,75,32,98,5,73,66},
	   {46,60,51,80,39,82,34,23,27,17,33,75,32,88,97,30,74,24,11,78,50,53,92,98,52,48,31,43,29,10,19,61},
	   {11,97,87,34,35,62,77,8,82,42,15,91,20,14,41,49,5,91,83,29,5,88,2,99,32,71,52,89,47,94,53,84},
	   {86,26,53,83,87,71,87,58,80,4,4,75,85,30,66,73,73,92,12,81,59,97,47,46,36,45,73,70,88,87,2,71},
	   {91,88,69,12,31,82,23,44,24,39,75,13,15,5,20,66,40,7,84,76,79,30,62,27,9,87,56,49,77,64,55,96},
	   {54,10,91,97,64,77,46,26,3,44,86,35,91,89,76,45,79,13,57,68,73,13,15,91,11,16,7,71,36,69,83,81},
	   {30,29,95,25,56,50,38,88,33,43,19,22,31,19,93,21,77,26,41,38,93,72,55,45,34,81,80,24,19,6,90,73},
	   {67,61,85,66,61,55,91,62,57,27,48,98,73,56,36,30,59,85,97,97,79,69,53,41,97,30,49,20,9,3,65,41},
	   {15,93,93,98,89,14,15,29,96,1,11,43,48,22,40,77,97,19,93,91,3,50,33,32,53,17,47,27,54,92,15,59},
	   {72,9,58,66,42,33,77,24,93,80,9,60,44,67,89,61,90,75,45,14,58,73,80,60,33,81,58,8,34,48,53,81},
	   {87,90,30,37,7,94,2,80,6,69,42,79,5,77,4,2,51,70,69,55,54,60,37,71,94,0,46,72,93,65,54,95},
	   {39,48,67,25,49,64,60,4,9,39,98,18,84,82,56,16,84,35,5,70,77,98,33,13,80,55,51,15,12,47,94,51},
	   {69,94,6,72,70,54,63,12,34,63,61,65,19,32,78,92,80,31,57,27,2,42,11,92,38,49,77,41,45,84,78,7},
	   {57,68,75,59,87,70,41,80,22,20,23,38,8,89,33,53,76,5,64,73,29,10,68,98,73,6,80,13,54,53,57,62},
	   {86,83,22,98,49,63,1,60,49,7,23,91,70,84,78,31,88,98,80,81,38,25,55,63,17,87,68,41,42,94,56,21},
	   {1,7,47,72,67,44,76,69,51,16,87,26,9,24,99,71,39,94,67,75,86,42,36,73,61,48,80,47,41,19,6,2},
	   {17,55,50,67,25,71,96,30,75,62,93,76,41,47,83,0,18,96,91,19,79,91,64,10,58,36,46,3,63,32,68,19},
	   {8,4,67,17,63,19,33,48,14,33,39,12,46,92,55,26,97,72,82,97,31,43,10,57,28,8,20,75,85,53,41,55},
	   {0,81,34,71,5,20,6,25,11,98,31,65,29,34,54,1,63,15,29,96,69,42,54,94,70,23,31,17,45,39,21,19}
	};

	int len = LongestIncreasingPath(matrix);
	cout << len << endl;
}